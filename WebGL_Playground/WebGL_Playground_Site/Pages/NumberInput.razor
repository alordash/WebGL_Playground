@using System.Globalization

<textarea @bind="InputString" @bind:event="oninput" placeholder="@PlaceHolder" style="resize: none" />

@code {
    [Parameter]
    public double? DefaultValue { get; set; } = null;
    public double Value { get; set; } = 0;
    [Parameter]
    public string PlaceHolder { get; set; } = "Type number here...";
    [Parameter]
    public bool IntegerNumber { get; set; } = false;

    private bool inputStringIsEmpty = true;
    private bool showTrailingZeroes = false;
    private bool showMinus = false;

    private string FormatOutput(double d) {
        return d.ToString() + (showTrailingZeroes ? "." : "");
    }

    private string InputString {
        get {
            if(showMinus) {
                return "-";
            }
            if(inputStringIsEmpty) {
                return "";
            }
            return FormatOutput(Value);
        }
        set {
            if(value == "-") {
                showMinus = true;
            } else if(double.TryParse(value, System.Globalization.NumberStyles.Any, CultureInfo.InvariantCulture, out double v)) {
                if(IntegerNumber) {
                    v = (int)v;
                } else {
                    showTrailingZeroes = value.Last() == '.';
                }
                Value = v;
                inputStringIsEmpty = false;
                showMinus = false;
            } else if(String.IsNullOrEmpty(value)) {
                Value = 0;
                showMinus = showTrailingZeroes = false;
                inputStringIsEmpty = true;
            }
        }
    }

    protected override void OnParametersSet() {
        if(DefaultValue != null) {
            Value = (double)DefaultValue;
            inputStringIsEmpty = false;
        }
    }
}